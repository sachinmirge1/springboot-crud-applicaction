A) Use Spring boot
B) Use Rest controller
C) Need DB configuration (Use RDB instead of in-memory)
D) Use annotation based configuration (Not XML).
E) JPA & Hibernate

1) Category CRUD operation.
2) Product CRUD operation.
3) Relation between Category-Products should have one-to-many relation. (One category can have multiple products).
4) Machine test should have Server side pagination.
5) While fetching single product detail the response should be populated with respective category details.

Please share the code via GitHub or GitLab etc.

{"name":"Furniture"}

POST: http://localhost:8060/app4/category/save
PUT:  http://localhost:8060/app4/category/update/{id}
GET:  http://localhost:8060/app4/category/{id}
GET:  http://localhost:8060/app4/getallcategorys
DELETE: http://localhost:8060/app4/category/delete/{id}
DELETE: http://localhost:8060/app4/deleteallcategorys

{"name":"laptop",
 "price":2000.00,
 "category":{"id":"13","name":"Electronics"}
}

POST: http://localhost:8060/app4/product/save
PUT:  http://localhost:8060/app4/product/update/{id}
GET:  http://localhost:8060/app4/product/{id}
GET:  http://localhost:8060/app4/products
DELETE: http://localhost:8060/app4/product/delete/{id}
DELETE: http://localhost:8060/app4/deleteallproducts
